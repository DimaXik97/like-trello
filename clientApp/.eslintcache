[{"E:\\ITA\\like-trello\\clientApp\\src\\index.tsx":"1","E:\\ITA\\like-trello\\clientApp\\src\\reportWebVitals.ts":"2","E:\\ITA\\like-trello\\clientApp\\src\\App.tsx":"3","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Nav\\index.tsx":"4","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Header\\index.tsx":"5","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Login\\index.tsx":"6","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Profile\\index.tsx":"7","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\BoardInformation\\index.tsx":"8","E:\\ITA\\like-trello\\clientApp\\src\\store.ts":"9","E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\index.ts":"10","E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\boards.ts":"11","E:\\ITA\\like-trello\\clientApp\\src\\store\\actionTypes.ts":"12","E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\user.ts":"13","E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\index.ts":"14","E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\user.ts":"15","E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\board.ts":"16","E:\\ITA\\like-trello\\clientApp\\src\\utils\\setAuthToken.ts":"17","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\ListBoards\\index.tsx":"18","E:\\ITA\\like-trello\\clientApp\\src\\types\\index.ts":"19","E:\\ITA\\like-trello\\clientApp\\src\\types\\board.ts":"20","E:\\ITA\\like-trello\\clientApp\\src\\types\\user.ts":"21","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Modal\\index.tsx":"22","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Main\\index.tsx":"23","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Board\\index.tsx":"24","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Modal\\Users.tsx":"25","E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\savedBoard.ts":"26","E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\savedBoard.ts":"27","E:\\ITA\\like-trello\\clientApp\\src\\types\\savedBoard.ts":"28"},{"size":343,"mtime":1611654641611,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":883,"mtime":1611831589659,"results":"32","hashOfConfig":"30"},{"size":924,"mtime":1612535142439,"results":"33","hashOfConfig":"30"},{"size":1820,"mtime":1612469677794,"results":"34","hashOfConfig":"30"},{"size":654,"mtime":1611654572388,"results":"35","hashOfConfig":"30"},{"size":703,"mtime":1612469546843,"results":"36","hashOfConfig":"30"},{"size":636,"mtime":1611838707756,"results":"37","hashOfConfig":"30"},{"size":617,"mtime":1611654649257,"results":"38","hashOfConfig":"30"},{"size":302,"mtime":1612467780751,"results":"39","hashOfConfig":"30"},{"size":1517,"mtime":1612468002315,"results":"40","hashOfConfig":"30"},{"size":562,"mtime":1612467486372,"results":"41","hashOfConfig":"30"},{"size":771,"mtime":1612260091332,"results":"42","hashOfConfig":"30"},{"size":82,"mtime":1612468294024,"results":"43","hashOfConfig":"30"},{"size":1982,"mtime":1612468482597,"results":"44","hashOfConfig":"30"},{"size":2386,"mtime":1612469167382,"results":"45","hashOfConfig":"30"},{"size":541,"mtime":1611654630279,"results":"46","hashOfConfig":"30"},{"size":3842,"mtime":1612469465531,"results":"47","hashOfConfig":"30"},{"size":587,"mtime":1612469281200,"results":"48","hashOfConfig":"30"},{"size":1111,"mtime":1612467888418,"results":"49","hashOfConfig":"30"},{"size":683,"mtime":1612259973190,"results":"50","hashOfConfig":"30"},{"size":4596,"mtime":1612349841181,"results":"51","hashOfConfig":"30"},{"size":426,"mtime":1611831739728,"results":"52","hashOfConfig":"30"},{"size":691,"mtime":1612469320777,"results":"53","hashOfConfig":"30"},{"size":1683,"mtime":1611901817309,"results":"54","hashOfConfig":"30"},{"size":862,"mtime":1612469090015,"results":"55","hashOfConfig":"30"},{"size":1462,"mtime":1612468498672,"results":"56","hashOfConfig":"30"},{"size":669,"mtime":1612467922238,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1rp12hf",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ITA\\like-trello\\clientApp\\src\\index.tsx",[],["118","119"],"E:\\ITA\\like-trello\\clientApp\\src\\reportWebVitals.ts",[],["120","121"],"E:\\ITA\\like-trello\\clientApp\\src\\App.tsx",["122","123"],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Nav from \"./copmonent/Nav/index\";\nimport Header from \"./copmonent/Header/index\";\nimport Main from \"./copmonent/Main\";\nimport Board from \"./copmonent/Board\";\n\nimport styles from \"./App.module.css\";\nimport { getToken } from \"./store/actionCreators\";\n\nimport \"normalize.css\";\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getToken());\n  }, []);\n  return (\n    <React.Fragment>\n      <Router>\n        <Header />\n        <Nav />\n        <Switch>\n          <Route path=\"/:id\">\n            <Board />\n          </Route>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Nav\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Header\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Login\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Profile\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\BoardInformation\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\store.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\index.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\boards.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\actionTypes.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\user.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\index.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\user.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\board.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\utils\\setAuthToken.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\ListBoards\\index.tsx",["124"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { CgClose } from \"react-icons/cg\";\r\n\r\nimport {\r\n  createNewBoard,\r\n  deleteBoard,\r\n  changeBoard,\r\n  deleteSavedBoard,\r\n} from \"../../store/actionCreators\";\r\nimport { IBoard, IBoardForm, StateType } from \"../../types\";\r\nimport Modal from \"../Modal\";\r\n\r\nimport styles from \"./ListBoards.module.css\";\r\n\r\nconst ListBoards: React.FC = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editBoard, setEditBoard] = useState<IBoard | undefined>(undefined);\r\n  const dispatch = useDispatch();\r\n  const boards: IBoard[] = useSelector(\r\n    (state: StateType) => state.boards.boards\r\n  );\r\n  const savedBoards: IBoard[] = useSelector(\r\n    (state: StateType) => state.savedBoards.saveBoards\r\n  );\r\n  const selectedBoard: IBoard | undefined = useSelector(\r\n    (state: StateType) => state.boards.selectedBoard\r\n  );\r\n\r\n  const onOpenModal = (event: React.MouseEvent) => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const onCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setEditBoard(undefined);\r\n  };\r\n  const submitHandler = (data: IBoardForm) => {\r\n    dispatch(createNewBoard(data));\r\n    onCloseModal();\r\n  };\r\n  const setEditBoardHandler = (id: string) => (event: React.MouseEvent) => {\r\n    const board = boards.find((x: IBoard) => x._id === id);\r\n    if (board) {\r\n      setEditBoard(board);\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n  const onDeleteHandler = (id: string) => {\r\n    const result: boolean = window.confirm(\"Are you sure?\");\r\n    if (result) {\r\n      dispatch(deleteBoard(id));\r\n    }\r\n    onCloseModal();\r\n  };\r\n  const onEditHandler = (id: string, data: IBoardForm) => {\r\n    dispatch(changeBoard(id, data));\r\n    onCloseModal();\r\n  };\r\n  const deleteSavedBoardHandler = (id: string) => (event: React.MouseEvent) => {\r\n    const isDelete = window.confirm(\"Are you sure?\");\r\n    if (isDelete) {\r\n      dispatch(deleteSavedBoard(id));\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.list}>\r\n      <div>My boards:</div>\r\n      {boards.map((b: IBoard, i: number) => (\r\n        <div className={styles.item}>\r\n          <Link\r\n            key={i}\r\n            to={`/${b._id}`}\r\n            className={classNames(styles.link, {\r\n              [styles.active]: selectedBoard && b._id === selectedBoard._id,\r\n            })}\r\n          >\r\n            {b.name}\r\n          </Link>\r\n          <IconContext.Provider value={{ className: styles.settingsIcon }}>\r\n            <FiSettings onClick={setEditBoardHandler(b._id)} />\r\n          </IconContext.Provider>\r\n        </div>\r\n      ))}\r\n      <button onClick={onOpenModal} className={styles.newBtn}>\r\n        Add new\r\n      </button>\r\n      <Modal\r\n        initValue={editBoard}\r\n        isOpen={isModalOpen}\r\n        onClose={onCloseModal}\r\n        onEdit={onEditHandler}\r\n        onDelete={onDeleteHandler}\r\n        onSubmit={submitHandler}\r\n      >\r\n        <div />\r\n      </Modal>\r\n      <hr className={styles.line} />\r\n      <div>Saved boards:</div>\r\n\r\n      {savedBoards.map((b: IBoard, i: number) => (\r\n        <div className={styles.item}>\r\n          <Link\r\n            key={i}\r\n            to={`/${b._id}`}\r\n            className={classNames(styles.link, {\r\n              [styles.active]: selectedBoard && b._id === selectedBoard._id,\r\n            })}\r\n          >\r\n            {b.name}\r\n          </Link>\r\n          <IconContext.Provider value={{ className: styles.settingsIcon }}>\r\n            <CgClose onClick={deleteSavedBoardHandler(b._id)} />\r\n          </IconContext.Provider>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ListBoards;\r\n","E:\\ITA\\like-trello\\clientApp\\src\\types\\index.ts",["125"],"E:\\ITA\\like-trello\\clientApp\\src\\types\\board.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\types\\user.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Modal\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Main\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Board\\index.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\copmonent\\Modal\\Users.tsx",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\reducers\\savedBoard.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\store\\actionCreators\\savedBoard.ts",[],"E:\\ITA\\like-trello\\clientApp\\src\\types\\savedBoard.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"126","replacedBy":"130"},{"ruleId":"128","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":18,"column":6,"nodeType":"138","endLine":18,"endColumn":8,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"141","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":14},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'useEffect' is defined but never used.","'boards' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [dispatch]",{"range":"147","text":"148"},[556,558],"[dispatch]"]